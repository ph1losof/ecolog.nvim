[0;33mInstalling test dependencies...[0m
Installing test dependencies...
Dependencies installed!
[0;32mRunning all tests in batches of 3...[0m
[0;34mFound 27 test files, will run in 9 batches[0m

[0;32m=== Batch 1/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/commands_spec.lua[0m
[0;34m  - tests/spec/ecolog_spec.lua[0m
[0;34m  - tests/spec/env_pattern_spec.lua[0m
=== Running tests/spec/commands_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/commands_spec.lua	
[32mSuccess[0m	||	ecolog commands EcologPeek command should be registered	
No environment variable found under cursor[32mSuccess[0m	||	ecolog commands EcologPeek command should work without arguments	

[32mSuccess[0m	||	ecolog commands EcologPeek command should work with existing variable	
[32mSuccess[0m	||	ecolog commands EcologPeek command should handle non-existing variable gracefully	
[32mSuccess[0m	||	ecolog commands EcologPeek command should support command completion	
[32mSuccess[0m	||	ecolog commands EcologSelect command should be registered	
[32mSuccess[0m	||	ecolog commands EcologSelect command should work without arguments	
Selected environment file: .env.local[32mSuccess[0m	||	ecolog commands EcologSelect command should work with file argument	

Environment file not found: /var/folders/ys/rf2qs47951b1yn27jn88zpt40000gn/T/nvim.tentacles/9cAsRc/8/.env.nonexistent[32mSuccess[0m	||	ecolog commands EcologSelect command should handle non-existing file gracefully	
[32mSuccess[0m	||	ecolog commands EcologRefresh command should be registered	

Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Failed to delete autocmd: Failed to delete autocmd
Failed to delete augroup: Vim:E367: No such group: "--Deleted--"
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands EcologRefresh command should refresh environment variables	
[32mSuccess[0m	||	ecolog commands EcologGoto command should be registered	

Selected environment file: .env
New environment file detected: .env[32mSuccess[0m	||	ecolog commands EcologGoto command should open env file when available	

No environment file selected[32mSuccess[0m	||	ecolog commands EcologGoto command should handle no selected file gracefully	
[32mSuccess[0m	||	ecolog commands EcologShelterToggle command should be registered	

Shelter modes restored to initial settings[32mSuccess[0m	||	ecolog commands EcologShelterToggle command should toggle all shelter modes	
[32mSuccess[0m	||	ecolog commands EcologShelter command should be registered	

Shelter mode for CMP is now enabled[32mSuccess[0m	||	ecolog commands EcologShelter command should enable specific features	

Shelter mode for PEEK is now disabled[32mSuccess[0m	||	ecolog commands EcologShelter command should disable specific features	

Shelter mode for CMP is now enabled[32mSuccess[0m	||	ecolog commands EcologShelter command should toggle specific features	

Invalid command. Use 'enable', 'disable', or 'toggle'[32mSuccess[0m	||	ecolog commands EcologShelter command should handle invalid commands gracefully	
[32mSuccess[0m	||	ecolog commands EcologShelter command should provide command completion	
[32mSuccess[0m	||	ecolog commands EcologGenerateExample command should be registered	

Selected environment file: .env
Generated /var/folders/ys/rf2qs47951b1yn27jn88zpt40000gn/T/nvim.tentacles/9cAsRc/23/.env.example[32mSuccess[0m	||	ecolog commands EcologGenerateExample command should generate example file	

No environment file selected. Use :EcologSelect to select one.[32mSuccess[0m	||	ecolog commands EcologGenerateExample command should handle no selected file gracefully	

No environment variable found under cursor
No environment files found
No environment file selected
Shelter modes restored to initial settings
No environment file selected. Use :EcologSelect to select one.[32mSuccess[0m	||	ecolog commands command error handling should handle commands when no .env files exist	
[32mSuccess[0m	||	ecolog commands command error handling should handle commands in readonly directory	

Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands command integration with file changes should reflect file changes after refresh	

Selected environment file: .env
Selected environment file: .env.local[32mSuccess[0m	||	ecolog commands command integration with file changes should switch between different env files	

Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases concurrent command execution should handle multiple EcologRefresh commands concurrently	

Selected environment file: .env
Selected environment file: .env
Selected environment file: .env.local
Selected environment file: .env.production[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases concurrent command execution should handle overlapping EcologSelect operations	

Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases concurrent command execution should handle rapid EcologPeek commands	

Environment file not found: /nonexistent/path/.env
Environment file not found: invalid/relative/path
Environment file not found: /var/folders/ys/rf2qs47951b1yn27jn88zpt40000gn/T/nvim.tentacles/9cAsRc/32/directory_not_file
Selected environment file: null[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command argument validation should validate EcologSelect path arguments	
[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command argument validation should validate EcologPeek variable names	

Environment file not found: '/var/folders/ys/rf2qs47951b1yn27jn88zpt40000gn/T/nvim.tentacles/9cAsRc/34/special chars & symbols/.env'[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command argument validation should handle commands with special characters in arguments	

Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command state persistence should maintain command functionality after plugin reload	

Selected environment file: .env
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command state persistence should handle multiple setup/teardown cycles	

[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases buffer context handling should handle commands in scratch buffers	
[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases buffer context handling should handle commands in readonly buffers	
Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases buffer context handling should handle commands in modified buffers	

Selected environment file: .env.large[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases performance and resource management should handle commands with large env files	

Selected environment file: .env.many1
Selected environment file: .env.many2
Selected environment file: .env.many3
Selected environment file: .env.many4
Selected environment file: .env.many5[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases performance and resource management should handle commands with many env files	

Selected environment file: .env.mem1
Selected environment file: .env.mem2
Selected environment file: .env.mem3
Selected environment file: .env.mem4
Selected environment file: .env.mem5
Selected environment file: .env.mem6
Selected environment file: .env.mem7
Selected environment file: .env.mem8
Selected environment file: .env.mem9
Selected environment file: .env.mem10[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases performance and resource management should manage memory efficiently during repeated operations	
[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command completion and help should provide command completion for registered commands	

Shelter modes restored to initial settings
Shelter mode for CMP is now enabled
Shelter mode for CMP is now disabled
Shelter mode for CMP is now enabled
Shelter mode for PEEK is now enabled
Shelter mode for PEEK is now disabled
Shelter mode for PEEK is now enabled[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases command completion and help should handle tab completion for EcologShelterToggle and EcologShelter	

Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected environment file: .env
Selected environment file: .env
Selected environment file: .env
Selected environment file: .env
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases error recovery and resilience should recover from corrupted command state	

Selected file '.env' was deleted. No environment files found.
Selected environment file: .env
Selected environment file: .env[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases error recovery and resilience should handle filesystem changes during command execution	

Selected environment file: .env.stress1[32mSuccess[0m	||	ecolog commands enhanced command validation and edge cases error recovery and resilience should provide graceful degradation when resources are limited	
	
[32mSuccess: [0m	48	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	

Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Selected file '.env' was deleted. No environment files found.
Selected file '.env' was deleted. No environment files found.
Selected environment file: .env[0;32mBatch 1 completed successfully[0m

[0;32m=== Batch 2/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/env_spec.lua[0m
[0;34m  - tests/spec/error_handling_spec.lua[0m
[0;34m  - tests/spec/file_operations_spec.lua[0m
=== Running tests/spec/env_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/env_spec.lua	
[32mSuccess[0m	||	vim.env integration update_env_vars() should update vim.env with environment variables	
[32mSuccess[0m	||	vim.env integration update_env_vars() should remove variables that no longer exist	
[32mSuccess[0m	||	vim.env integration get() should return all environment variables when no key is provided	
[32mSuccess[0m	||	vim.env integration get() should return specific environment variable when key is provided	
[32mSuccess[0m	||	vim.env integration get() should return nil for non-existent variables	
[32mSuccess[0m	||	vim.env integration setup() should initialize environment variables	
	
[32mSuccess: [0m	6	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down
Force unlocking all state locks
Ecolog safely shut down[0;32mBatch 2 completed successfully[0m

[0;32m=== Batch 3/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/file_watcher_spec.lua[0m
[0;34m  - tests/spec/highlights_spec.lua[0m
[0;34m  - tests/spec/integrations_spec.lua[0m
=== Running tests/spec/file_watcher_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/file_watcher_spec.lua	
[32mSuccess[0m	||	file_watcher setup_watcher should validate input parameters	
[32mSuccess[0m	||	file_watcher setup_watcher should clean up existing watchers	
[32mSuccess[0m	||	file_watcher setup_watcher should create augroup and autocmds	
[32mSuccess[0m	||	file_watcher setup_watcher should handle augroup creation failure	
[32mSuccess[0m	||	file_watcher setup_watcher should filter valid watch patterns	
[32mSuccess[0m	||	file_watcher setup_watcher should setup monorepo watchers when monorepo root exists	
[32mSuccess[0m	||	file_watcher filesystem event handling should handle file creation events	
[32mSuccess[0m	||	file_watcher filesystem event handling should handle file write events	
[32mSuccess[0m	||	file_watcher filesystem event handling should handle file deletion events	
[32mSuccess[0m	||	file_watcher filesystem event handling should detect file system changes on focus events	
[32mSuccess[0m	||	file_watcher monorepo filesystem watcher should setup periodic polling for monorepo	
[32mSuccess[0m	||	file_watcher monorepo filesystem watcher should detect file changes via polling	
[32mSuccess[0m	||	file_watcher monorepo filesystem watcher should handle file additions and removals	
[32mSuccess[0m	||	file_watcher libuv filesystem watcher should setup libuv watcher when available	
[32mSuccess[0m	||	file_watcher libuv filesystem watcher should handle libuv not available	
[32mSuccess[0m	||	file_watcher libuv filesystem watcher should handle filesystem events from libuv	
[32mSuccess[0m	||	file_watcher cache management should clear monorepo cache when files change	
[32mSuccess[0m	||	file_watcher cache management should clear workspace resolver cache	
[32mSuccess[0m	||	file_watcher error handling should handle autocmd callback errors gracefully	
[32mSuccess[0m	||	file_watcher error handling should handle timer callback errors	
	
[32mSuccess: [0m	20	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
[0;32mBatch 3 completed successfully[0m

[0;32m=== Batch 4/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/interpolation_spec.lua[0m
[0;34m  - tests/spec/language_providers_enhanced_spec.lua[0m
[0;34m  - tests/spec/lsp_integration_spec.lua[0m
=== Running tests/spec/interpolation_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/interpolation_spec.lua	
[32mSuccess[0m	||	interpolation basic interpolation should interpolate simple variables	
Undefined variable: UNDEFINED[32mSuccess[0m	||	interpolation basic interpolation should handle undefined variables	
[32mSuccess[0m	||	interpolation basic interpolation should handle empty variables	
[32mSuccess[0m	||	interpolation basic interpolation should handle nested interpolation	
[32mSuccess[0m	||	interpolation default and alternate values should handle default values	
[32mSuccess[0m	||	interpolation default and alternate values should handle alternate values	
[32mSuccess[0m	||	interpolation quoted strings should handle single quoted strings	
[32mSuccess[0m	||	interpolation quoted strings should handle double quoted strings	
[32mSuccess[0m	||	interpolation escape sequences should handle basic escape sequences	
[32mSuccess[0m	||	interpolation command substitution should handle basic command substitution	

Command substitution failed: /bin/sh: nonexistent_command: command not found
 (exit code: 127)[32mSuccess[0m	||	interpolation command substitution should handle failed commands	
[32mSuccess[0m	||	interpolation command substitution should fail on command errors when configured	

Maximum interpolation iterations reached[32mSuccess[0m	||	interpolation options should respect max_iterations	
[32mSuccess[0m	||	interpolation options should handle warn_on_undefined option	
[32mSuccess[0m	||	interpolation complex interpolation scenarios should handle nested interpolations	
[32mSuccess[0m	||	interpolation complex interpolation scenarios should handle multiple levels of nesting	
[32mSuccess[0m	||	interpolation complex interpolation scenarios should handle shell command interpolation with pipes	
[32mSuccess[0m	||	interpolation complex interpolation scenarios should handle shell commands with environment variables	
[32mSuccess[0m	||	interpolation complex interpolation scenarios should handle mixed interpolation types	

Maximum interpolation iterations reached[32mSuccess[0m	||	interpolation error handling should handle circular references gracefully	

Command substitution failed:  (exit code: 127)[32mSuccess[0m	||	interpolation error handling should handle invalid shell commands gracefully	
[32mSuccess[0m	||	interpolation error handling should handle empty interpolation expressions	
[32mSuccess[0m	||	interpolation error handling should handle malformed interpolation expressions	
[32mSuccess[0m	||	interpolation error handling should handle unclosed command substitutions	
[32mSuccess[0m	||	interpolation feature control should respect disabled variable interpolation	
[32mSuccess[0m	||	interpolation feature control should respect disabled command substitution	
[32mSuccess[0m	||	interpolation feature control should respect disabled escape sequences	
[32mSuccess[0m	||	interpolation feature control should respect disabled default values	
[32mSuccess[0m	||	interpolation feature control should respect disabled alternate values	

Command contains potentially dangerous characters, sanitizing: echo test; echo hacked[32mSuccess[0m	||	interpolation security options should sanitize dangerous characters by default	
[32mSuccess[0m	||	interpolation security options should allow dangerous characters when security is disabled	

Command contains potentially dangerous characters, sanitizing: echo test | cat[32mSuccess[0m	||	interpolation security options should sanitize pipe characters by default	
[32mSuccess[0m	||	interpolation security options should allow pipe characters when security is disabled	

Command contains potentially dangerous characters, sanitizing: echo `whoami`[32mSuccess[0m	||	interpolation security options should sanitize backticks by default	
[32mSuccess[0m	||	interpolation security options should allow backticks when security is disabled	
[32mSuccess[0m	||	interpolation advanced variable operations should handle alternate value if set and non-empty	
[32mSuccess[0m	||	interpolation advanced variable operations should handle alternate value if set	
[32mSuccess[0m	||	interpolation advanced variable operations should handle mixed quotes and escapes	
[32mSuccess[0m	||	interpolation shell environment integration should read from shell environment when not in env_vars	
[32mSuccess[0m	||	interpolation shell environment integration should prefer env_vars over shell environment	
	
[32mSuccess: [0m	40	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
[0;32mBatch 4 completed successfully[0m

[0;32m=== Batch 5/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/monorepo_providers_spec.lua[0m
[0;34m  - tests/spec/monorepo_refactored_spec.lua[0m
[0;34m  - tests/spec/multi_line_spec.lua[0m
=== Running tests/spec/monorepo_providers_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/monorepo_providers_spec.lua	
[32mSuccess[0m	||	monorepo provider system provider detection should detect turborepo provider	
[32mSuccess[0m	||	monorepo provider system provider detection should detect nx provider	
[32mSuccess[0m	||	monorepo provider system provider detection should detect lerna provider	
[32mSuccess[0m	||	monorepo provider system provider-specific workspace patterns should use turborepo workspace patterns	
[32mSuccess[0m	||	monorepo provider system provider-specific workspace patterns should use nx workspace patterns	
[32mSuccess[0m	||	monorepo provider system provider-specific workspace priority should use turborepo workspace priority	
[32mSuccess[0m	||	monorepo provider system provider-specific workspace priority should use nx workspace priority	
[32mSuccess[0m	||	monorepo provider system custom provider configuration should support custom provider configuration	
[32mSuccess[0m	||	monorepo provider system boolean configuration should return nil when monorepo is disabled by default	
[32mSuccess[0m	||	monorepo provider system boolean configuration should work with monorepo = true	
[32mSuccess[0m	||	monorepo provider system boolean configuration should work with monorepo = false	
	
[32mSuccess: [0m	11	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
[0;32mBatch 5 completed successfully[0m

[0;32m=== Batch 6/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/notification_timer_spec.lua[0m
[0;34m  - tests/spec/peek_spec.lua[0m
[0;34m  - tests/spec/providers_spec.lua[0m
=== Running tests/spec/notification_timer_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/notification_timer_spec.lua	
Test message[32mSuccess[0m	||	notification and timer managers NotificationManager basic notifications should send notifications	

Error message
Warning message
Debug message[32mSuccess[0m	||	notification and timer managers NotificationManager basic notifications should send notifications with custom log levels	

Same message
Same message[32mSuccess[0m	||	notification and timer managers NotificationManager basic notifications should force notifications when requested	

Duplicate message[32mSuccess[0m	||	notification and timer managers NotificationManager deduplication should deduplicate identical messages	

Message 1
Message 2
Message 3[32mSuccess[0m	||	notification and timer managers NotificationManager deduplication should not deduplicate different messages	

Same message
Same message[32mSuccess[0m	||	notification and timer managers NotificationManager deduplication should consider log level in deduplication	

Time-sensitive message
Time-sensitive message[32mSuccess[0m	||	notification and timer managers NotificationManager deduplication should expire deduplication cache	
[32mSuccess[0m	||	notification and timer managers NotificationManager cache management should provide cache statistics	

Cacheable message
Cacheable message[32mSuccess[0m	||	notification and timer managers NotificationManager cache management should clear cache	

Message 1
Message 2
New message[32mSuccess[0m	||	notification and timer managers NotificationManager cache management should clean up expired cache entries	

Selected file '.env' was deleted. No environment files found.[32mSuccess[0m	||	notification and timer managers NotificationManager specialized notifications should notify about file deletion	

Selected file '.env' was deleted. Switched to: .env.local[32mSuccess[0m	||	notification and timer managers NotificationManager specialized notifications should notify about file deletion with replacement	

New environment file detected: .env.new[32mSuccess[0m	||	notification and timer managers NotificationManager specialized notifications should notify about file creation	

Environment file error [.env]: Permission denied[32mSuccess[0m	||	notification and timer managers NotificationManager specialized notifications should notify about file errors	
[32mSuccess[0m	||	notification and timer managers TimerManager basic timer creation should create single-shot timers	
[32mSuccess[0m	||	notification and timer managers TimerManager basic timer creation should create repeating timers	

Timer callback error: tests/spec/notification_timer_spec.lua:300: Test error[32mSuccess[0m	||	notification and timer managers TimerManager basic timer creation should handle callback errors gracefully	
[32mSuccess[0m	||	notification and timer managers TimerManager basic timer creation should return nil for failed timer creation	
[32mSuccess[0m	||	notification and timer managers TimerManager debounced timers should debounce timer calls	
[32mSuccess[0m	||	notification and timer managers TimerManager debounced timers should handle debounced timer arguments	

Debounced callback error: tests/spec/notification_timer_spec.lua:367: Debounced error[32mSuccess[0m	||	notification and timer managers TimerManager debounced timers should handle debounced callback errors	
[32mSuccess[0m	||	notification and timer managers TimerManager debounced timers should allow different debounce IDs	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cancellation should cancel libuv timers	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cancellation should cancel vim timers	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cancellation should handle invalid timer cancellation	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cancellation should cancel all debounced timers	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cancellation should cancel all timers	
[32mSuccess[0m	||	notification and timer managers TimerManager timer statistics should provide timer statistics	
[32mSuccess[0m	||	notification and timer managers TimerManager timer statistics should track active timers in statistics	
[32mSuccess[0m	||	notification and timer managers TimerManager timer statistics should track debounced timers in statistics	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cleanup should clean up single-shot timers automatically	
[32mSuccess[0m	||	notification and timer managers TimerManager timer cleanup should not clean up repeating timers automatically	

Timer-triggered notification[32mSuccess[0m	||	notification and timer managers integration between managers should handle timer-triggered notifications	

Rapid notification[32mSuccess[0m	||	notification and timer managers integration between managers should handle rapid timer notifications with deduplication	
	
[32mSuccess: [0m	34	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
[0;32mBatch 6 completed successfully[0m

[0;32m=== Batch 7/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/select_spec.lua[0m
[0;34m  - tests/spec/shelter/integrations/fzf_spec.lua[0m
[0;34m  - tests/spec/shelter/integrations/snacks_spec.lua[0m
=== Running tests/spec/select_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/select_spec.lua	
[32mSuccess[0m	||	select window should respect custom env file patterns	
[32mSuccess[0m	||	select window should respect custom sort function	
	
[32mSuccess: [0m	2	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
[0;32mBatch 7 completed successfully[0m

[0;32m=== Batch 8/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/shelter/integrations/telescope_spec.lua[0m
[0;34m  - tests/spec/shelter/previewer_utils_spec.lua[0m
[0;34m  - tests/spec/shelter_spec.lua[0m
=== Running tests/spec/shelter/integrations/telescope_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/shelter/integrations/telescope_spec.lua	
[32mSuccess[0m	||	telescope previewer integration setup_telescope_shelter should store original previewers and set new ones when enabled	
[32mSuccess[0m	||	telescope previewer integration setup_telescope_shelter should restore original previewers when disabled	
[32mSuccess[0m	||	telescope previewer integration modified preview functionality should mask env file in file preview	
[32mSuccess[0m	||	telescope previewer integration modified preview functionality should mask env file in grep preview	
[32mSuccess[0m	||	telescope previewer integration modified preview functionality should not mask non-env files	
[32mSuccess[0m	||	telescope previewer integration modified preview functionality should not mask preview when disabled	
	
[32mSuccess: [0m	6	
[31mFailed : [0m	0	
[31mErrors : [0m	0	
========================================	
Force unlocking all state locks
Ecolog safely shut down[0;32mBatch 8 completed successfully[0m

[0;32m=== Batch 9/9 ===[0m
[0;34mRunning batch of 3 test(s)...[0m
[0;34m  - tests/spec/statusline_integration_spec.lua[0m
[0;34m  - tests/spec/types_spec.lua[0m
[0;34m  - tests/spec/utils_spec.lua[0m
=== Running tests/spec/statusline_integration_spec.lua (1/3) ===	

========================================	
Testing: 	tests/spec/statusline_integration_spec.lua	
[32mSuccess[0m	||	statusline integration setup should setup with default configuration	
[32mSuccess[0m	||	statusline integration setup should setup with custom configuration	
[31mFail[0m	||	statusline integration setup should create ColorScheme autocommand	
            tests/spec/statusline_integration_spec.lua:112: Expected objects to be the same.
            Passed in:
            (nil)
            Expected:
            type table
            
            stack traceback:
            	tests/spec/statusline_integration_spec.lua:112: in function <tests/spec/statusline_integration_spec.lua:105>
            	
[32mSuccess[0m	||	statusline integration get_statusline should return formatted statusline	
[32mSuccess[0m	||	statusline integration get_statusline should include icons when enabled	
[32mSuccess[0m	||	statusline integration get_statusline should not include icons when disabled	
[32mSuccess[0m	||	statusline integration get_statusline should use shelter icon when shelter is active	
[32mSuccess[0m	||	statusline integration get_statusline should use custom formatters	
[32mSuccess[0m	||	statusline integration get_statusline should return empty string in hidden mode when no env file	
[32mSuccess[0m	||	statusline integration get_statusline should handle no env file gracefully	
[32mSuccess[0m	||	statusline integration cache functionality should cache results for performance	
[32mSuccess[0m	||	statusline integration cache functionality should refresh cache when invalidated	
[32mSuccess[0m	||	statusline integration cache functionality should refresh cache after timeout	
[31mFail[0m	||	statusline integration highlight functionality should setup highlights when enabled	
            tests/spec/statusline_integration_spec.lua:294: Expected to be called >0 time(s), but was called 0 time(s)
            
            stack traceback:
            	tests/spec/statusline_integration_spec.lua:294: in function <tests/spec/statusline_integration_spec.lua:281>
            	
[31mFail[0m	||	statusline integration highlight functionality should handle hex color highlights	
            tests/spec/statusline_integration_spec.lua:311: Expected to be called >0 time(s), but was called 0 time(s)
            
            stack traceback:
            	tests/spec/statusline_integration_spec.lua:311: in function <tests/spec/statusline_integration_spec.lua:299>
            	
[32mSuccess[0m	||	statusline integration highlight functionality should skip highlights when disabled	
[32mSuccess[0m	||	statusline integration lualine integration should create lualine component	
[32mSuccess[0m	||	statusline integration lualine integration should return lualine config	
[32mSuccess[0m	||	statusline integration lualine integration should check ecolog availability in condition	
Error in get_env_vars: ./lua/ecolog/env_loader.lua:342: attempt to call field 'find_env_files' (a nil value)[32mSuccess[0m	||	statusline integration error handling should handle missing ecolog gracefully	
[32mSuccess[0m	||	statusline integration error handling should handle missing shelter module gracefully	
[32mSuccess[0m	||	statusline integration error handling should handle invalid highlight groups gracefully	
[32mSuccess[0m	||	statusline integration edge cases should handle empty environment variables	
[32mSuccess[0m	||	statusline integration edge cases should handle very long file names	
[32mSuccess[0m	||	statusline integration edge cases should handle large number of variables	
[32mSuccess[0m	||	statusline integration configuration validation should handle invalid icon configuration	
[32mSuccess[0m	||	statusline integration configuration validation should handle invalid format functions	
[32mSuccess[0m	||	statusline integration configuration validation should handle mixed highlight configurations	
	
[32mSuccess: [0m	25	
[31mFailed : [0m	3	
[31mErrors : [0m	0	
========================================	
Tests Failed. Exit: 1	
[0;31mBatch 9 failed[0m

[0;32m=== Overall Results ===[0m
Total batches: 9
Successful batches: [0;32m8[0m
Failed batches: [0;31m1[0m
[0;31mFailed batch numbers: 9[0m
